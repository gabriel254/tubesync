---
name: Schedule

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/scheduler.yml
      - tubesync/**
      - environment.yml
  schedule:
    - cron: 30 * * * *

permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - uses: actions/cache@main
        id: cache-ffmpeg
        with:
          path: |
            ~/.local/bin/ffmpeg
            ~/.local/bin/ffprobe
          key: ffmpeg

      - name: Install ffmpeg
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        shell: bash
        run: |
          if [ ! -x "$HOME/.local/bin/ffmpeg" ]; then
          mkdir -p ~/.local/bin
          curl -fsSL -o /tmp/ffmpeg.tar.gz "https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz"
          tar --extract --strip-components=1 --file /tmp/ffmpeg.tar.gz -C ~/.local/bin/ --wildcards '*/ffmpeg' '*/ffprobe'
          fi

      - name: Install uv
        uses: astral-sh/setup-uv@main
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Install the project
        run: uv sync --locked --no-dev

      - name: Maximize disk space
        run: |
          df -h
          # Remove .Net
          sudo rm -rf /usr/share/dotnet
          # Remove Android
          sudo rm -rf /usr/local/lib/android
          # Remove Haskell
          sudo rm -rf /opt/ghc
          # Remove CodeQL
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          # Remove docker images
          sudo docker image prune --all --force
          df -h
          USERID=$(id -u)
          GROUPID=$(id -g)
          sudo mkdir /workspace
          sudo chown $USERID:$GROUPID /workspace
          sudo chmod 777 /workspace

      - name: Fetch processed data
        id: data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download data -D data --clobber --pattern youtube-chenyifaer.json
          sha1sum data/youtube-chenyifaer.json > data/youtube-chenyifaer.json.sha1

      - name: Sync
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VIDEOGRAM_TG_SESSION_STRING: ${{ secrets.VIDEOGRAM_TG_SESSION_STRING }}
          VIDEOGRAM_YT_LANG: zh-CN
          VIDEOGRAM_YTDLP_PROXY: ${{ secrets.VIDEOGRAM_YTDLP_PROXY }}
        run: |
          cd /workspace
          cp -r $GITHUB_WORKSPACE .
          cd ${GITHUB_WORKSPACE##*/}
          uv run tubesync/youtube.py --database data/youtube-chenyifaer.json

      - name: Upload release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd /workspace/${GITHUB_WORKSPACE##*/}
          if ! sha1sum -c data/youtube-chenyifaer.json.sha1 &> /dev/null; then
          gh release upload --clobber data data/youtube-chenyifaer.json
          fi

  # https://github.com/liskin/gh-workflow-keepalive
  keepalive:
    if: github.event_name == 'schedule'
    name: Keepalive
    runs-on: ubuntu-latest
    permissions:
      actions: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Re-enable workflow
        run: |
          case "${GITHUB_WORKFLOW_REF:?}" in
          "${GITHUB_REPOSITORY:?}"/.github/workflows/*.y*ml@*) ;;
          *) false ;;
          esac
          workflow="${GITHUB_WORKFLOW_REF%%@*}"
          workflow="${workflow#${GITHUB_REPOSITORY}/.github/workflows/}"
          echo "Re-enable $workflow"
          gh api -X PUT "repos/${GITHUB_REPOSITORY}/actions/workflows/${workflow}/enable"
